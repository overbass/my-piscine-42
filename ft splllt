/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strdup.c                                        :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: cdai <marvin@42.fr>                        +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/08/09 10:50:35 by cdai              #+#    #+#             */
/*   Updated: 2019/08/12 23:14:38 by cdai             ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>

char	*ft_strdup(char *src)
{
	unsigned int	i;
	char			*res;

	i = 0;
	while (src[i])
		i++;
	res = malloc(sizeof(res) * i + 1);
	if (res == 0)
		return (0);
	i = -1;
	while (src[++i])
		res[i] = src[i];
	res[i] = '\0';
	return (res);
}
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_strjoin.c                                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: cdai <marvin@42.fr>                        +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/08/09 12:09:31 by cdai              #+#    #+#             */
/*   Updated: 2019/08/14 15:25:20 by cdai             ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>

int					ft_len(char *str)
{
	int				i;

	i = 0;
	while (str[i])
		i++;
	return (i);
}

unsigned long int	ft_len_all(int size, char **strs, char *sep)
{
	int					i;
	int					j;
	unsigned long int	result;

	i = 0;
	j = 0;
	result = 0;
	while (i < size)
	{
		j = 0;
		while (strs[i][j])
		{
			result++;
			j++;
		}
		i++;
	}
	result = result + ((size - 1) * ft_len(sep));
	return (result);
}

char				*ft_strcat(char *dest, char *src)
{
	int					len;
	int					i;

	i = 0;
	len = 0;
	while (dest[len] != '\0')
		len++;
	while (src[i] != '\0')
	{
		dest[len + i] = src[i];
		i++;
	}
	dest[len + i] = '\0';
	return (dest);
}

char				*ft_strjoin(int size, char **strs, char *sep)
{
	char				*res;
	int					i;
	unsigned long int	nb_char;

	i = 0;
	if (size <= 0)
	{
		res = malloc(sizeof(*res));
		res[0] = '\0';
		return (res);
	}
	nb_char = ft_len_all(size, strs, sep);
	res = malloc(sizeof(*res) * (nb_char + 1));
	res[0] = '\0';
	while (i < size)
	{
		res = ft_strcat(res, strs[i]);
		if (i < size - 1)
			res = ft_strcat(res, sep);
		i++;
	}
	res[nb_char] = '\0';
  /* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: cdai <marvin@42.fr>                        +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/08/12 23:26:09 by cdai              #+#    #+#             */
/*   Updated: 2019/08/15 09:42:04 by cdai             ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <stdlib.h>

int		ft_is_in_charset(char c, char *charset)
{
	while (*charset)
	{
		if (c == *charset)
			return (1);
		charset++;
	}
	return (0);
}

int		ft_count_word(char *str, char *charset)
{
	int				result;
	int				i;
	int				is_word;

	i = 0;
	result = 0;
	is_word = 0;
	while (str[i])
	{
		if (!is_word && !ft_is_in_charset(str[i], charset))
		{
			is_word = 1;
			result++;
		}
		else if (is_word && ft_is_in_charset(str[i], charset))
			is_word = 0;
		i++;
	}
	return (result);
}

char	*ft_strdup_mix(char *src, char *charset)
{
	unsigned int	i;
	char			*res;

	i = 0;
	while (src[i] && !ft_is_in_charset(src[i], charset))
		i++;
	res = malloc(sizeof(res) * (i + 1));
	if (res == 0)
		return (0);
	i = -1;
	while (src[++i] && !ft_is_in_charset(src[i], charset))
		res[i] = src[i];
	res[i] = '\0';
	return (res);
}

char	**ft_split(char *str, char *charset)
{
	char			**result;
	int				i;
	int				j;
	int				is_word;

	i = -1;
	j = 0;
	is_word = 0;
	result = malloc(sizeof(*result) * (ft_count_word(str, charset) + 1));
	if (!result)
		return (0);
	while (str[++i])
	{
		if (!is_word && !ft_is_in_charset(str[i], charset))
		{
			is_word = 1;
			result[j++] = ft_strdup_mix((str + i), charset);
		}
		else if (is_word && ft_is_in_charset(str[i], charset))
			is_word = 0;
	}
	result[j] = 0;
	return (result);
}

	return (res);
}
